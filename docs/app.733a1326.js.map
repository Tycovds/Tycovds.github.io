{"version":3,"sources":["js/app.js"],"names":["wrapper","document","getElementById","canvas","createElement","width","getBoundingClientRect","height","c","getContext","particleArray","maxParticles","particleSize","speedx","speedy","opacity","Particle","x","y","vx","vy","window","innerHeight","randomPos","draw","beginPath","arc","Math","PI","fill","closePath","init","i","push","animate","requestAnimationFrame","fillStyle","fillRect","innerWidth","forEach","particle","update","axis","random","addEventListener","appendChild"],"mappings":";AAmFA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnFA,IAAIA,EAAUC,SAASC,eAAe,WAEhCC,EAASF,SAASG,cAAc,UACtCD,EAAOE,MAAQL,EAAQM,wBAAwBD,MAC/CF,EAAOI,OAASP,EAAQM,wBAAwBC,OAChD,IAAMC,EAAIL,EAAOM,WAAW,MAEtBC,EAAgB,GAEhBC,EAAe,GACfC,EAAe,EACjBC,GAAU,EACVC,EAAS,GAEPC,EAAU,KAGVC,EAAAA,WACUC,SAAAA,EAAAA,EAAGC,GAAG,EAAA,KAAA,GACTD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,GAAKN,EACLO,KAAAA,GAAKN,EA6DlB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA1Da,MAAA,WACD,KAAKG,GAAK,GAAK,KAAKC,GAAKG,OAAOC,aAE3BL,KAAAA,GAAK,KAAKE,GACVD,KAAAA,GAAK,KAAKE,GACVA,KAAAA,GAAe,MAAV,KAAKA,KAEVH,KAAAA,EAAIM,EAAU,KACdL,KAAAA,EAAI,EACJE,KAAAA,GAAKN,GAETU,KAAAA,SA+Cb,CAAA,IAAA,OA7CW,MAAA,WACHhB,EAAEiB,YACFjB,EAAEkB,IAAI,KAAKT,EAAG,KAAKC,EAAGN,EAAc,EAAa,EAAVe,KAAKC,IAC5CpB,EAAEqB,OACFrB,EAAEsB,gBAyCV,EAlEMd,GAgCN,SAASe,IACA,IAAA,IAAIC,EAAI,EAAGA,EAAIrB,EAAcqB,IAC9BtB,EAAcuB,KAAK,IAAIjB,EAASO,EAAU,KAAKA,EAAU,OAE7DW,IAEJ,SAASA,IACLC,sBAAsBD,GAEtB1B,EAAE4B,UAAsBrB,UAAAA,OAAAA,GACxBP,EAAE6B,SAAS,EAAG,EAAGhB,OAAOiB,WAAYjB,OAAOC,aAC3Cd,EAAE4B,UAAY,OACd1B,EAAc6B,QAAQ,SAAAC,GAClBA,EAASC,WAIjB,SAASlB,EAAUmB,GACZA,MAAS,MAATA,EACQf,KAAKgB,UAAYtB,OAAOiB,WAAajB,OAAOC,aAEtC,MAAToB,EACGf,KAAKgB,SAAWtB,OAAOC,YAEvB,IAzBfS,IA8BAV,OAAOuB,iBAAiB,SAAU,WAC9BzC,EAAOE,MAAQL,EAAQM,wBAAwBD,MAC/CF,EAAOI,OAASP,EAAQM,wBAAwBC,SAGpDP,EAAQ6C,YAAY1C","file":"app.733a1326.js","sourceRoot":"..","sourcesContent":["let wrapper = document.getElementById('wrapper')\r\n\r\nconst canvas = document.createElement('canvas');\r\ncanvas.width = wrapper.getBoundingClientRect().width\r\ncanvas.height = wrapper.getBoundingClientRect().height\r\nconst c = canvas.getContext('2d');\r\n\r\nconst particleArray = [];\r\n\r\nconst maxParticles = 10;\r\nconst particleSize = 7;\r\nlet speedx = -1;\r\nlet speedy = 0.5;\r\n// end of hex num\r\nconst opacity = 'aa';\r\n\r\n\r\nclass Particle {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.vx = speedx;\r\n        this.vy = speedy;\r\n        \r\n    }\r\n    update() {\r\n        if (this.x >= 0 && this.y <= window.innerHeight) {\r\n            \r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.vy = this.vy * 1.005;\r\n        } else {\r\n            this.x = randomPos('x');\r\n            this.y = 0;\r\n            this.vy = speedy;\r\n        }\r\n        this.draw()\r\n    }\r\n    draw() {\r\n        c.beginPath()\r\n        c.arc(this.x, this.y, particleSize, 0, Math.PI * 2);\r\n        c.fill()\r\n        c.closePath()\r\n    }\r\n    \r\n}\r\n\r\n\r\ninit()\r\nfunction init() {\r\n    for (let i = 0; i < maxParticles; i++) {\r\n        particleArray.push(new Particle(randomPos('x'),randomPos('y') ))\r\n    }\r\n    animate()\r\n}\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    // c.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    c.fillStyle = `#1a1a2e${opacity}`;\r\n    c.fillRect(0, 0, window.innerWidth, window.innerHeight);\r\n    c.fillStyle = 'plum';\r\n    particleArray.forEach(particle => {\r\n        particle.update();\r\n    })\r\n}\r\n\r\nfunction randomPos(axis) {\r\n    if(axis === 'x'){\r\n        return Math.random() * (window.innerWidth + window.innerHeight);\r\n    }\r\n    else if(axis === 'y'){\r\n        return Math.random() * window.innerHeight;\r\n    }else {\r\n        return 100;\r\n    }\r\n}\r\n\r\n\r\nwindow.addEventListener('resize', () => {\r\n    canvas.width = wrapper.getBoundingClientRect().width\r\n    canvas.height = wrapper.getBoundingClientRect().height\r\n})\r\n\r\nwrapper.appendChild(canvas);"]}